# https://taskfile.dev

version: '3'

output: prefixed

vars:
  Name: yomo
  ExeName: yomo{{exeExt}}
  ExeDir: yomo 
  ReleaseDir: release 
  Version: 
    sh: git describe --always --tags --dirty
  Date:
    sh: git show -s --format=%cs {{.Commit}}
  Commit:
    sh: git rev-parse --short HEAD
  Module:
    sh: go list -m

tasks:
  default:
    cmds:
      - task -l 
    silent: true

  build:
    desc: build yomo cli tools
    cmds:
      - echo "{{.Name}} building..."
      - go build -v -o {{.ExeDir}}/{{.ExeName}} -ldflags "-s -w -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" {{.ExeDir}}/main.go
      - echo "{{.Name}} built."
    generates:
      - "{{.ExeDir}}/{{.ExeName}}"
    sources:
      - "**/*.go"
    method: none
    silent: true

  install:
    desc: install yomo cli tools
    deps: []
    dir: yomo
    cmds:
      - echo "{{.Name}} install..."
      - go install -ldflags "-s -w -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" 
      - echo "{{.Name}} {{.Version}}({{.Date}}) is installed."
    silent: true

  release:
    desc: release yomo cli tools
    cmds:
      - echo "{{.Name}} release..."
      - GOOS=darwin GOARCH=amd64 go build -ldflags "-w -s -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" -o {{.ReleaseDir}}/{{.Name}}_{{.Version}}_mac yomo/main.go
      - GOOS=linux GOARCH=amd64 go build -ldflags "-w -s -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" -o {{.ReleaseDir}}/{{.Name}}_{{.Version}}_linux yomo/main.go
      - GOOS=windows GOARCH=amd64 go build -ldflags "-w -s -X {{.Module}}/cmd.Version={{.Version}} -X {{.Module}}/cmd.Date={{.Date}}" -o {{.ReleaseDir}}/{{.Name}}_{{.Version}}_windows.exe yomo/main.go
      - echo "{{.Name}} {{.Version}} is released."
    silent: true

  run:
    desc: run yomo cli 
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}}"
    silent: false

  example:
    desc: example
    deps: [example-zipper,example-source,example-stream-fn,example-stream-fn-db]
    cmds:
      - echo "example"

  example-yomo-dev:
    desc: "run stream function via yomo-dev"
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}} dev -m example/go.mod example/stream-fn/app.go"
    silent: false

  example-source:
    desc: run source application
    deps: [example-source-build]
    dir: "example/source"
    cmds:
      - "./source{{exeExt}}"
    silent: false

  example-source-build:
    desc: build source application
    dir: "example/source"
    cmds:
      - echo "source building..."
      - "go build -o source{{exeExt}} main.go"
      - echo "source built."
    silent: false

  example-stream-fn:
    desc: "run stream function"
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}} run -n Noise -m example/go.mod example/stream-fn/app.go"
    silent: false

  example-zipper:
    desc: "run zipper"
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}} serve -c example/zipper/workflow.yaml"
    silent: false

  example-stream-fn-db:
    desc: run output stream-fn-db
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}} run -n MockDB -m example/go.mod example/stream-fn-db/app.go"
    silent: false

  version:
    desc: "print version"
    cmds: 
      - echo "Version {{.Version}}({{.Date}})"
    silent: true

  clean:
    desc: "clean"
    cmds: 
      - echo 'cleaning...'
      - rm -rf ./example/source/source{{exeExt}}
      - rm -rf ./example/stream-fn/sl.*
      - rm -rf ./example/stream-fn-db/stream-fn-db{{exeExt}}
      - rm -rf ./yomo/yomo{{exeExt}}
      - rm -rf ./release
      - echo 'clean.'
    silent: true

  example-mesh-us:
    desc: example-mesh-us
    deps: [example-mesh-zipper-sender-us,example-mesh-zipper-receiver-us,example-mesh-stream-fn-us,example-mesh-stream-fn-db-us,example-mesh-source-us]
    cmds:
      - echo "example-mesh-us"

  example-mesh-eu:
    desc: example-mesh-eu
    deps: [example-mesh-zipper-sender-eu,example-mesh-zipper-receiver-eu,example-mesh-stream-fn-eu,example-mesh-stream-fn-db-eu,example-mesh-source-eu]
    cmds:
      - echo "example-mesh-eu"

  example-mesh-zipper-sender-us:
    desc: "run zipper-sender-us"
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}} serve -c example/mesh/us/sender.yaml -m https://mesh-config.yomo.run/api/configs"
    silent: false

  example-mesh-zipper-receiver-us:
    desc: "run zipper-receiver-us"
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}} serve -c example/mesh/us/receiver.yaml"
    silent: false

  example-mesh-zipper-sender-eu:
    desc: "run zipper-sender-eu"
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}} serve -c example/mesh/eu/sender.yaml -m https://mesh-config.yomo.run/api/configs"
    silent: false

  example-mesh-zipper-receiver-eu:
    desc: "run zipper-receiver-eu"
    deps: [build]
    cmds:
      - "{{.ExeDir}}/{{.ExeName}} serve -c example/mesh/eu/receiver.yaml"
    silent: false

  example-mesh-source-us:
    desc: run source application
    deps: [example-mesh-source-build]
    dir: "example/mesh/source"
    cmds:
      - "./source{{exeExt}}"
    env:
      PORT: 9000
    silent: false

  example-mesh-source-eu:
    desc: run source application
    deps: [example-mesh-source-build]
    dir: "example/mesh/source"
    cmds:
      - "./source{{exeExt}}"
    env:
      PORT: 9800
    silent: false

  example-mesh-source-build:
    desc: build source application
    dir: "example/mesh/source"
    cmds:
      - echo "source building..."
      - "go build -o source{{exeExt}} main.go"
      - echo "source built."
    silent: false

  example-mesh-stream-fn-us:
    desc: run stream function
    deps: [example-mesh-stream-fn-build]
    dir: "example/mesh/stream-fn"
    cmds:
      - "./stream-fn{{exeExt}}"
    env:
      PORT: 9000
      REGION: "ðŸ’– US ðŸ’–"
    silent: false

  example-mesh-stream-fn-eu:
    desc: run stream function
    deps: [example-mesh-stream-fn-build]
    dir: "example/mesh/stream-fn"
    cmds:
      - "./stream-fn{{exeExt}}"
    env:
      PORT: 9800
      REGION: "ðŸ’™ EU ðŸ’™"
    silent: false

  example-mesh-stream-fn-build:
    desc: build stream function
    dir: "example/mesh/stream-fn"
    cmds:
      - "go build -o stream-fn{{exeExt}} app.go"
    silent: false

  example-mesh-stream-fn-db-us:
    desc: run output stream-fn-db
    deps: [example-mesh-stream-fn-db-build]
    dir: "example/mesh/stream-fn-db"
    cmds:
      - "./stream-fn-db{{exeExt}}"
    env:
      PORT: 9001
    silent: false

  example-mesh-stream-fn-db-eu:
    desc: run output stream-fn-db
    deps: [example-mesh-stream-fn-db-build]
    dir: "example/mesh/stream-fn-db"
    cmds:
      - "./stream-fn-db{{exeExt}}"
    env:
      PORT: 9801
    silent: false

  example-mesh-stream-fn-db-build:
    desc: build output stream-fn-db
    dir: "example/mesh/stream-fn-db"
    cmds:
      - "go build -o stream-fn-db{{exeExt}} app.go"
    silent: false
